apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    group: example
spec:
  selector:
    app: second-app
  ports:
    - protocol: "TCP"
      port: 80
      targetPort: 8080
    # - protocol: "TCP" <- We can have multiple ports
    #  port: 80
    #  targetPort: 8080
  type: LoadBalancer # ClusterIP - NodePort
---
apiVersion: apps/v1
kind: Deployment #Service - Job
metadata:
  name: second-app-deployment
  labels:
    group: example
spec:
  replicas: 1
  selector:
    matchLabels:
      app: second-app
      tier: backend
    # matchExpressions:
    #   - { key: app, operator: In , values: [second-app, first-app] }
  template: # <- define pods
    #kind: Pod <- not necessary because a template of a deployment is always a Pod
    metadata:
      labels: 
        app: second-app # <- define a label app with second-app value
        tier: backend
    spec:
      containers:
        - name: second-node
          image: pedropicateclas/kub-first-app:3
          imagePullPolicy: Always # Never
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            initialDelaySeconds: 5
        # - name: Another-Name
        #   image: another_image <- we can have multiple containers